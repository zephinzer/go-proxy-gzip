stages:
  - prepare
  - compile
  - release
  - publish

prepare makefile:
  stage: prepare
  except: ["tags"]
  image: docker:stable
  services: ['docker:dind']
  artifacts:
    expire_in: 1 day
    paths:
    - Makefile.properties
    - .version
  before_script:
  - apk add make
  script:
  - echo "BINARY_FILENAME=${BINARY_FILENAME}" > Makefile.properties
  - echo "DOCKER_REGISTRY_HOSTNAME=${DOCKER_REGISTRY_HOSTNAME}" >> Makefile.properties
  - echo "DOCKER_IMAGE_NAMESPACE=${DOCKER_IMAGE_NAMESPACE}" >> Makefile.properties
  - echo "DOCKER_IMAGE_NAME=${DOCKER_IMAGE_NAME}" >> Makefile.properties
  - echo "GITHUB_REPOSITORY_URL=${GITHUB_REPOSITORY_URL}" >> Makefile.properties
  - echo "VERSION_BUMP=${VERSION_BUMP}" >> Makefile.properties
  - make version.next > .version

compile:
  stage: compile
  except: ["tags"]
  image: docker:stable
  services: ['docker:dind']
  dependencies: ['prepare makefile']
  artifacts:
    expire_in: 3 days
    paths:
    - bin
  before_script:
  - apk add git make
  script:
  - make compile

gitlab:
  stage: release
  except: ["tags"]
  image: docker:stable
  services: ['docker:dind']
  dependencies: ['prepare makefile']
  before_script:
  - apk add git make openssh
  - |
    if [ "${GITLAB_SSH_DEPLOY_KEY}" != "" ]; then
      mkdir -p ~/.ssh;
      printf -- "${GITLAB_SSH_DEPLOY_KEY}" | base64 -d >> ~/.ssh/id_rsa;
      chmod 600 ~/.ssh/id_rsa;
      ssh-keyscan -t rsa gitlab.com >> ~/.ssh/known_hosts;
    fi;
  script:
  - |
    if [ "${GITLAB_REPOSITORY_URL}" != "" ] && [ "{GITLAB_SSH_DEPLOY_KEY}" != "" ]; then
      make release.gitlab BUMP=${VERSION_BUMP};
    fi;

dockerhub:
  stage: publish
  except: ["tags"]
  image: docker:stable
  services: ['docker:dind']
  dependencies: ['prepare makefile']
  before_script:
  - apk add git make
  script:
  - |
    if [ "${DOCKER_REGISTRY_USERNAME}" != "" ] && [ "${DOCKER_REGISTRY_PASSWORD}" != "" ]; then
      docker login ${DOCKER_REGISTRY_HOSTNAME} -u ${DOCKER_REGISTRY_USERNAME} -p ${DOCKER_REGISTRY_PASSWORD};
      make release.dockerhub;
      docker logout;
    fi;
